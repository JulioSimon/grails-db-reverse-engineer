buildscript {
	ext {
		grailsVersion = project.grailsVersion
	}
	repositories {
		mavenLocal()
		maven { url 'https://repo.grails.org/grails/core' }
		jcenter()
	}
	dependencies {
		classpath "org.grails:grails-gradle-plugin:$grailsVersion"
		classpath 'org.asciidoctor:asciidoctor-gradle-plugin:1.5.2'
		classpath 'org.asciidoctor:asciidoctorj-epub3:1.5.0-alpha.4'
		classpath 'org.asciidoctor:asciidoctorj-pdf:1.5.0-alpha.9'
	}
}

plugins {
	id 'io.spring.dependency-management' version '0.5.2.RELEASE'
	id 'com.jfrog.bintray' version '1.2'
}

version = file('version.txt').text.trim()
group 'org.grails.plugins'

apply plugin: 'maven-publish'
apply plugin: 'org.grails.grails-plugin'
apply plugin: 'org.asciidoctor.convert'

apply from: 'https://raw.githubusercontent.com/grails/grails-profile-repository/master/profiles/plugin/templates/grailsCentralPublishing.gradle'
apply from: 'https://raw.githubusercontent.com/grails/grails-profile-repository/master/profiles/plugin/templates/bintrayPublishing.gradle'

ext {
	grailsVersion = project.grailsVersion
	gradleWrapperVersion = project.gradleWrapperVersion
}

sourceCompatibility = targetCompatibility = 1.7

repositories {
	mavenLocal()
	mavenCentral()
	maven { url 'https://repo.grails.org/grails/core' }
}

dependencyManagement {
	imports {
		mavenBom "org.grails:grails-bom:$grailsVersion"
	}
	applyMavenExclusions false
}

dependencies {

	provided 'org.grails:grails-core'

	compile 'org.hibernate:hibernate-tools:4.3.1.Final', {
		['ant', 'common', 'freemarker', 'org.eclipse.jdt.core', 'runtime', 'text'].each { exclude module: it }
	}

	compile 'org.freemarker:freemarker:2.3.23'

	compile 'org.hibernate:hibernate-core:4.3.10.Final'
}

asciidoctor {
	separateOutputDirs = false
	sourceDir = file('src/docs')
	sources {
		include 'index.adoc'
	}
	outputDir file('build/docs')
	backends 'html5', 'pdf', 'epub3'
	attributes 'source-highlighter': 'prettify',
	            icons:               'font',
	            setanchors:          'true',
	            idprefix:            '',
	            idseparator:         '-',
	            toc2:                '',
	            numbered:            '',
	            revnumber:           project.version
}

task docs(dependsOn: asciidoctor) << {
	File dir = file('build/docs')

	['pdf', 'epub'].each { String ext ->
		File f = new File(dir, 'index.' + ext)
		if (f.exists()) {
			f.renameTo new File(dir, project.name + '-' + project.version + '.' + ext)
		}
	}

	file('build/docs/ghpages.html') << file('src/docs/index.tmpl').text.replaceAll('@VERSION@', project.version)
}
